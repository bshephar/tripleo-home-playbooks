- include_role:
    name: tuned
  name: Configure tuned before reboot
  vars:
    tuned_isolated_cores: ''
    tuned_profile: virtual-host
  when: step|int == 0
- include_role:
    name: tripleo_kernel
    tasks_from: kernelargs.yml
  name: Configure kernel args and reboot
  vars:
    tripleo_kernel_args: ''
    tripleo_kernel_defer_reboot: false
    tripleo_kernel_hugepages: {}
    tripleo_kernel_hugepages_remove: false
    tripleo_kernel_reboot_timeout: 900
  when: step|int == 0
- include_role:
    name: tripleo_lvmfilter
  name: Run lvmfilter role
  when:
  - step|int == 1
- include_role:
    name: tripleo_iscsid
    tasks_from: iscsid.yaml
  name: Iscsid role
  when:
  - step|int == 3
- containers.podman.podman_container_info:
    name: nova_compute
  delay: 30
  failed_when:
  - nova_compute_infos.containers.0.Healthcheck.Status is defined
  - '''healthy'' not in nova_compute_infos.containers.0.Healthcheck.Status'
  name: validate nova-compute container state
  register: nova_compute_infos
  retries: 10
  tags:
  - opendev-validation
  - opendev-validation-nova
  when:
  - not container_healthcheck_disabled
  - step|int == 6
- include_role:
    name: tripleo_nvdimm
  name: manage PMEM namespaces for vPMEM
  vars:
    tripleo_nvdimm_pmem_namespaces: ''
  when:
  - step|int == 1
  - tripleo_nvdimm_pmem_namespaces != ''
- block:
  - name: is KSM enabled
    set_fact:
      compute_ksm_enabled: false
  - block:
    - become: true
      failed_when: false
      name: Check for ksm
      register: ksm_service_check
      shell: systemctl is-active ksm.service || systemctl is-enabled ksm.service
    - name: disable KSM services
      register: ksmdisabled
      service:
        enabled: false
        name: '{{ item }}'
        state: stopped
      when:
      - ksm_service_check.rc is defined
      - ksm_service_check.rc == 0
      with_items:
      - ksm.service
      - ksmtuned.service
    - command: echo 2 >/sys/kernel/mm/ksm/run
      name: delete PageKSM after disable ksm on compute
      when:
      - ksm_service_check.rc is defined
      - ksm_service_check.rc == 0
      - ksmdisabled is changed
    name: disable KSM on compute
    when: not compute_ksm_enabled|bool
  - block:
    - name: make sure package providing ksmtuned is installed (RHEL8 or CentOS8)
      package:
        name: qemu-kvm-common
        state: present
      when:
      - ansible_facts['distribution_major_version'] is version('8', '==')
    - name: enable ksmtunded
      service:
        enabled: true
        name: '{{ item }}'
        state: started
      with_items:
      - ksm.service
      - ksmtuned.service
    name: enable KSM on compute
    when: compute_ksm_enabled|bool
  name: enable/disable ksm
  when:
  - step|int == 1
- block:
  - become: true
    copy:
      content: '[Unit]

        Wants=tripleo_nova_virtsecretd.service

        Wants=tripleo_nova_virtnodedevd.service

        Wants=tripleo_nova_virtstoraged.service

        Wants=tripleo_nova_virtproxyd.service

        Wants=tripleo_nova_virtqemud.service

        After=tripleo_nova_virtsecretd.service

        After=tripleo_nova_virtnodedevd.service

        After=tripleo_nova_virtstoraged.service

        After=tripleo_nova_virtproxyd.service

        After=tripleo_nova_virtqemud.service

        '
      dest: /etc/systemd/system/tripleo_nova_libvirt.target
      group: root
      mode: '0644'
      owner: root
    name: Create systemd file
    register: libvirt_target_result
  - become: true
    name: Reload systemd
    systemd:
      daemon_reload: true
      enabled: true
      name: tripleo_nova_libvirt.target
      state: restarted
    when: libvirt_target_result.changed
  name: Set up systemd target for libvirt services
  when: step|int == 4
- include_role:
    name: tripleo_nova_migration_target
    tasks_from: configure.yaml
  name: nova migration target configure tasks
  tags:
  - opendev-validation
  - opendev-validation-nova
  when:
  - not container_healthcheck_disabled
  - step|int == 5
- block:
  - copy:
      content: "#!/bin/sh\ntmpwatch --nodirs \\\n  -X \"/var/log/containers/*/*log\"\
        \ \\\n  -X \"/var/log/containers/*/*/*log\" \\\n  -X \"/var/log/containers/*/*err\"\
        \ \\\n  {{ LogrotatePurgeAfterDays|int +1 }}d \\\n  /var/log/containers/ 2>&1\
        \ | logger -t container-tmpwatch\n"
      dest: /usr/local/sbin/containers-tmpwatch
      group: root
      mode: 493
      owner: root
    name: Push script
    vars:
      LogrotatePurgeAfterDays: '14'
  - cron:
      job: /usr/local/sbin/containers-tmpwatch
      name: Remove old logs
      special_time: daily
      user: root
    name: Insert cronjob in root crontab
  name: configure tmpwatch on the host
  when: step|int == 2
- block:
  - become: true
    containers.podman.podman_image:
      force: true
      name: '{{ prefetch_image }}'
      validate_certs: false
    delay: 5
    loop: '{{ lookup(''file'', tripleo_role_name + ''/docker_config.yaml'', errors=''ignore'')
      | default(''{}'', True) | from_yaml | recursive_get_key_from_dict(key=''image'')
      | unique }}'
    loop_control:
      loop_var: prefetch_image
    name: Pre-fetch all the containers
    register: result
    retries: 5
    until: result is succeeded
  when:
  - (step|int) == 1
- include_role:
    name: tripleo_container_manage
    tasks_from: shutdown.yml
  name: Manage tripleo container services
  when:
  - (step|int) == 1
- block:
  - include_role:
      name: linux-system-roles.certificate
    vars:
      certificate_requests:
      - ca: ipa
        dns: '{{fqdn_internal_api}}'
        key_size: '2048'
        name: ovn_controller
        principal: ovn_controller/{{fqdn_internal_api}}@{{idm_realm}}
  name: Certificate generation
  when:
  - step|int == 1
  - enable_internal_tls
- block:
  - include_role:
      name: linux-system-roles.certificate
    vars:
      certificate_requests:
      - ca: ipa
        dns: '{{fqdn_internal_api}}'
        key_size: '2048'
        name: ovn_metadata
        principal: ovn_metadata/{{fqdn_internal_api}}@{{idm_realm}}
  name: Certificate generation
  when:
  - step|int == 1
  - enable_internal_tls
