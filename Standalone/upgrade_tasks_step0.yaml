- block:
  - failed_when: false
    name: Get cinder_volume image id currently used by pacemaker
    register: cinder_volume_image_current_res
    shell: pcs resource config openstack-cinder-volume | grep -Eo 'image=[^ ]+' |
      awk -F= '{print $2;}'
  - name: cinder_volume image facts
    set_fact:
      cinder_volume_image_current: '{{cinder_volume_image_current_res.stdout}}'
      cinder_volume_image_latest: tripleo-director.ctlplane.localdomain:8787/tripleomastercentos9/openstack-cinder-volume:pcmklatest
  - import_role:
      name: tripleo_container_tag
    name: Temporarily tag the current cinder_volume image id with the upgraded image
      name
    vars:
      container_image: '{{cinder_volume_image_current}}'
      container_image_latest: '{{cinder_volume_image_latest}}'
      pull_image: false
    when:
    - cinder_volume_image_current != ''
    - cinder_volume_image_current != cinder_volume_image_latest
  - changed_when: false
    failed_when: false
    name: Check openstack-cinder-volume cluster resource status
    register: cinder_volume_pcs_res_result
    shell: pcs resource config openstack-cinder-volume
  - name: Set fact cinder_volume_pcs_res
    set_fact:
      cinder_volume_pcs_res: '{{cinder_volume_pcs_res_result.rc == 0}}'
  - name: set is_cinder_volume_bootstrap_node fact
    set_fact: is_cinder_volume_bootstrap_node={{cinder_volume_short_bootstrap_node_name|lower
      == ansible_facts['hostname']|lower}}
    tags: common
  name: Prepare switch of cinder_volume image name
  when:
  - step|int == 0
- block:
  - failed_when: false
    name: Get haproxy image id currently used by pacemaker
    register: haproxy_image_current_res
    shell: pcs resource config haproxy-bundle | grep -Eo 'image=[^ ]+' | awk -F= '{print
      $2;}'
  - name: Image facts for haproxy
    set_fact:
      haproxy_image_current: '{{haproxy_image_current_res.stdout}}'
      haproxy_image_latest: tripleo-director.ctlplane.localdomain:8787/tripleomastercentos9/openstack-haproxy:pcmklatest
  - import_role:
      name: tripleo_container_tag
    name: Temporarily tag the current haproxy image id with the upgraded image name
    vars:
      container_image: '{{haproxy_image_current}}'
      container_image_latest: '{{haproxy_image_latest}}'
      pull_image: false
    when:
    - haproxy_image_current != ''
    - haproxy_image_current != haproxy_image_latest
  - changed_when: false
    failed_when: false
    name: Check haproxy cluster resource status
    register: haproxy_pcs_res_result
    shell: pcs resource config haproxy-bundle
  - name: Set upgrade haproxy facts
    set_fact:
      haproxy_pcs_res: '{{haproxy_pcs_res_result.rc == 0}}'
      is_haproxy_bootstrap_node: '{{haproxy_short_bootstrap_node_name|lower == ansible_facts[''hostname'']|lower}}'
  name: Prepare switch of haproxy image name
  when:
  - step|int == 0
- block:
  - file:
      mode: 1777
      path: /var/tmp
      setype: tmp_t
      state: directory
    name: Reset selinux label on /var/tmp
  name: Anchor for upgrade and update tasks
  when: step|int == 0
- block:
  - failed_when: false
    name: Get galera image id currently used by pacemaker
    register: galera_image_current_res
    shell: pcs resource config galera-bundle | grep -Eo 'image=[^ ]+' | awk -F= '{print
      $2;}'
  - name: Image facts for galera
    set_fact:
      galera_image_current: '{{galera_image_current_res.stdout}}'
      galera_image_latest: tripleo-director.ctlplane.localdomain:8787/tripleomastercentos9/openstack-mariadb:pcmklatest
  - import_role:
      name: tripleo_container_tag
    name: Temporarily tag the current galera image id with the upgraded image name
    vars:
      container_image: '{{galera_image_current}}'
      container_image_latest: '{{galera_image_latest}}'
      pull_image: false
    when:
    - galera_image_current != ''
    - galera_image_current != galera_image_latest
  - changed_when: false
    failed_when: false
    name: Check galera cluster resource status
    register: galera_pcs_res_result
    shell: pcs resource config galera-bundle
  - name: Set fact galera_pcs_res
    set_fact:
      galera_pcs_res: '{{galera_pcs_res_result.rc == 0}}'
  - name: set is_mysql_bootstrap_node fact
    set_fact: is_mysql_bootstrap_node={{mysql_short_bootstrap_node_name|lower == ansible_facts['hostname']|lower}}
    tags: common
  name: Prepare switch of galera image name
  when:
  - step|int == 0
- block:
  - failed_when: false
    name: Get ovn-dbs image id currently used by pacemaker
    register: ovn_dbs_image_current_res
    shell: pcs resource config ovn-dbs-bundle | grep -Eo 'image=[^ ]+' | awk -F= '{print
      $2;}'
  - name: ovn-dbs image facts
    set_fact:
      ovn_dbs_image: tripleo-director.ctlplane.localdomain:8787/tripleomastercentos9/openstack-ovn-northd:current-tripleo
      ovn_dbs_image_current: '{{ovn_dbs_image_current_res.stdout}}'
      ovn_dbs_image_latest: tripleo-director.ctlplane.localdomain:8787/tripleomastercentos9/openstack-ovn-northd:pcmklatest
  - import_role:
      name: tripleo_container_tag
    name: Temporarily tag the current ovn_dbs image id with the upgraded image name
    vars:
      container_image: '{{ovn_dbs_image_current}}'
      container_image_latest: '{{ovn_dbs_image_latest}}'
      pull_image: false
    when:
    - ovn_dbs_image_current != ''
    - ovn_dbs_image_current != ovn_dbs_image_latest
  - changed_when: false
    failed_when: false
    name: Check ovn-dbs-bundle cluster resource status
    register: ovn_dbs_pcs_result
    shell: pcs resource config ovn-dbs-bundle
  - name: Set fact ovn_dbs_pcs_res
    set_fact:
      ovn_dbs_pcs_res: '{{ ovn_dbs_pcs_result.rc == 0 }}'
  name: Prepare switch of ovn-dbs image name
  when:
  - step|int == 0
- block:
  - failed_when: false
    name: Get rabbitmq image id currently used by pacemaker
    register: rabbitmq_image_current_res
    shell: pcs resource config rabbitmq-bundle | grep -Eo 'image=[^ ]+' | awk -F=
      '{print $2;}'
  - name: Image facts for rabbitmq
    set_fact:
      rabbitmq_image_current: '{{rabbitmq_image_current_res.stdout}}'
      rabbitmq_image_latest: tripleo-director.ctlplane.localdomain:8787/tripleomastercentos9/openstack-rabbitmq:pcmklatest
  - block:
    - import_role:
        name: tripleo_container_tag
      name: Temporarily tag the current rabbitmq image id with the upgraded image
        name
      vars:
        container_image: '{{rabbitmq_image_current}}'
        container_image_latest: '{{rabbitmq_image_latest}}'
        pull_image: false
      when:
      - rabbitmq_image_current != ''
      - rabbitmq_image_current != rabbitmq_image_latest
    name: Prepare the switch to new rabbitmq container image name in pacemaker
  - failed_when: false
    name: Check rabbitmq cluster resource status
    register: rabbitmq_pcs_res_result
    shell: pcs resource config rabbitmq-bundle
  - name: Set fact rabbitmq_pcs_res
    set_fact:
      rabbitmq_pcs_res: '{{rabbitmq_pcs_res_result.rc == 0}}'
  - name: set is_rpc_rabbitmq_bootstrap_node fact
    set_fact: is_rpc_rabbitmq_bootstrap_node={{oslo_messaging_rpc_short_bootstrap_node_name|lower
      == ansible_facts['hostname']|lower}}
  name: Prepare switch of rabbitmq image name
  when:
  - step|int == 0
- become: true
  name: pre-check to ensure redis is removed if the service is disabled
  shell: "export CIB_file=/var/lib/pacemaker/cib/cib.xml\nif crm_resource -r redis-bundle\
    \ -q &>/dev/null; then\n  echo \"Redis resource present in pacemaker but disabled\
    \ by default in TripleO\" >&2\n  echo \"Delete the resource in pacemaker or enable\
    \ the redis service before upgrading\" >&2\n  exit 1\nfi\n"
  tags:
  - never
  - system_upgrade
  - system_upgrade_prepare
  when:
  - step|int == 0
  - '"redis" not in enabled_services|list'
- block:
  - become: true
    delegate_to: '{{ mysql_short_bootstrap_node_name }}'
    name: check flag file existence in destination host
    register: tripleo_transfer_flag_stat
    stat:
      path: /var/lib/tripleo/transfer-flags/var-lib-mysql
  - name: Set fact cluster_recreate
    set_fact:
      cluster_recreate: '{{ tripleo_transfer_flag_stat.stat.exists|bool }}'
  - async: 30
    name: Check pacemaker cluster running before upgrade
    pacemaker_cluster: state=online check_and_fail=true
    poll: 4
    tags: validation
    when: not cluster_recreate|bool
  name: upgrade step 0
  when: step|int == 0
- block:
  - command: systemctl is-enabled --quiet snmpd
    failed_when: false
    name: Check if snmpd is enabled
    register: snmpd_enabled_result
  - name: Set fact snmpd_enabled
    set_fact:
      snmpd_enabled: '{{ snmpd_enabled_result.rc == 0 }}'
  when: step|int == 0
- name: Gather missing facts
  setup:
    gather_subset:
    - '!all'
    - '!min'
    - distribution
  tags:
  - always
  when: ansible_facts['distribution'] is not defined or ansible_facts['distribution_major_version']
    is not defined
- name: Set leapp facts
  set_fact:
    upgrade_leapp_command_options: ''
    upgrade_leapp_debug: true
    upgrade_leapp_devel_skip: ''
    upgrade_leapp_enabled: "{{ _upgradeLeappEnabled | bool and\n   ansible_facts['distribution']\
      \ == 'RedHat' and\n   ansible_facts['distribution_major_version'] is version('7',\
      \ '==') }}"
    upgrade_leapp_post_reboot_delay: 120
    upgrade_leapp_reboot_timeout: 3600
  tags:
  - always
  vars:
    _upgradeLeappEnabled: false
- block:
  - name: Run UpgradeInitCommand
    shell: '#!/bin/bash


      if [[ -f /etc/resolv.conf.save ]] ; then rm /etc/resolv.conf.save; fi


      '
  - name: Run UpgradeInitCommonCommand
    shell: '#!/bin/bash


      '
  - dnf:
      name: '@{{ item.module }}:{{ item.stream }}/{{ item.profile|default(''common'')
        }}'
      state: present
    loop: '{{ dnf_module_list|list }}'
    name: Ensure DNF modules have the right stream
    vars:
      dnf_module_list: []
    when:
    - dnf_module_list|length > 0
    - item.distribution_version is defined
    - ansible_facts['distribution_major_version'] is version(item.distribution_version,
      '==')
  - name: Ensure TripleO prerequisite packages are installed
    package:
      name:
      - jq
      - lvm2
      - net-snmp
      - openstack-selinux
      - os-net-config
      - puppet-tripleo
      - python3-heat-agent*
      - python3-openstackclient
      - rsync
      state: present
    when: ansible_facts['distribution_major_version'] is version('8', '==')
  name: Package and repo update tasks
  when: step|int == 0
- check_mode: false
  command: /usr/bin/rpm -q libvirt-daemon
  failed_when: false
  name: check if libvirt is installed
  register: libvirt_installed
  when: step|int == 0
- loop:
  - libvirtd.service
  - virtlogd.socket
  name: make sure libvirt services are disabled and masked
  service:
    daemon_reload: true
    enabled: false
    masked: true
    name: '{{ item }}'
    state: stopped
  when:
  - step|int == 0
  - libvirt_installed.rc == 0
